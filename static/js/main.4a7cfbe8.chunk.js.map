{"version":3,"sources":["logo.svg","components/Form.js","constants/constants.js","components/FormValidator.js","components/RegistrationForm.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","title","subtitle","signInBtn","name","onSubmit","children","errorMessages","empty","printEmail","takeLang","wrongName","wrongTelFormat","FormValidator","React","useState","values","setValues","errors","setErrors","isValid","setIsValid","console","log","handleChange","evt","target","value","validity","valid","valueMissing","typeMismatch","type","patternMismatch","validationMessage","setErrorMessage","closest","checkValidity","checkFormValidity","RegistrationForm","resetForm","placeholder","pattern","required","onChange","user","email","tel","size","disabled","selected","hidden","lang","id","for","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a7cfbe8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\n\r\nfunction Form(props) {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup__content\">\r\n        <h3 className=\"popup__title\">{props.title}</h3>\r\n        <div className=\"popup__subtitle\">\r\n          <p className=\"popup__text\">{props.subtitle}</p>\r\n          <button className=\"button button_entry\">{props.signInBtn}</button>\r\n        </div>\r\n        <form\r\n          className=\"popup__form\"\r\n          name={props.name}\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          {props.children}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","const errorMessages = {\r\n  empty: \"Это обязательное поле\",\r\n  printEmail: \"Введите действующий e-mail\",\r\n  takeLang: \"Пожалуйста, выберите язык\",\r\n  wrongName: \"Поле может содержать только буквы, дефис или пробел\",\r\n  wrongTelFormat:\r\n    \"Поле может содержать 11 цифр, круглые скобки, дефис и знак плюс\",\r\n};\r\n\r\nexport { errorMessages };\r\n","import React from \"react\";\r\nimport { errorMessages } from \"../constants/constants\";\r\n\r\nexport const FormValidator = () => {\r\n  const [values, setValues] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n  const [isValid, setIsValid] = React.useState(false);\r\n\r\n  const handleChange = (evt) => {\r\n    const target = evt.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    setValues({ ...values, [name]: value });\r\n    setErrorMessage(target, name);\r\n    setIsValid(checkFormValidity(target));\r\n  };\r\n\r\n  function checkFormValidity(target) {\r\n    if (target.name === \"lang\") {\r\n      if (target.closest(\"form\").checkValidity() && target.value !== \"Язык\") {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  function setErrorMessage(target, name) {\r\n    if (target.validity.valid) {\r\n      setErrors({ ...errors, [name]: \"\" });\r\n    }\r\n    if (target.validity.valueMissing) {\r\n      if (target.name !== \"lang\") {\r\n        setErrors({ ...errors, [name]: errorMessages.empty });\r\n      } else {\r\n        setErrors({ ...errors, [name]: errorMessages.takeLang });\r\n      }\r\n    }\r\n\r\n    if (target.validity.typeMismatch && target.type === \"email\") {\r\n      setErrors({ ...errors, [name]: errorMessages.printEmail });\r\n    }\r\n\r\n    if (target.validity.patternMismatch) {\r\n      if (target.name === \"user\") {\r\n        setErrors({ ...errors, [name]: errorMessages.wrongName });\r\n      }\r\n      if (target.type === \"tel\") {\r\n        setErrors({ ...errors, [name]: errorMessages.wrongTelFormat });\r\n      }\r\n    } else {\r\n      setErrors({ ...errors, [name]: errorMessages.validationMessage });\r\n    }\r\n  }\r\n  console.log(isValid);\r\n  return { values, handleChange, errors, isValid };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./index.css\";\r\nimport Form from \"./Form\";\r\nimport { FormValidator } from \"../components/FormValidator\";\r\n\r\nfunction RegistrationForm(props) {\r\n  const { values, handleChange, errors, isValid, resetForm } = FormValidator();\r\n\r\n  return (\r\n    <Form\r\n      name=\"registration\"\r\n      title=\"Регистрация\"\r\n      subtitle=\"Уже есть аккаунт?\"\r\n      signInBtn=\"Войти\"\r\n    >\r\n      <div className=\"popup__input-box\">\r\n        <h4 className=\"popup__input-name\">Имя</h4>{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          name=\"user\"\r\n          className=\"popup__input popup__input_type_name\"\r\n          placeholder=\"Введите Ваше Имя\"\r\n          pattern=\"^([A-Za-zА-Яа-яЁё \\-]+)$\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <span className=\"popup__error\">{errors.user}</span>\r\n      <div className=\"popup__input-box\">\r\n        <h4 className=\"popup__input-name\">Email</h4>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          className=\"popup__input popup__input_type_email\"\r\n          placeholder=\"Введите ваш email\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <span className=\"popup__error\">{errors.email}</span>\r\n      <div className=\"popup__input-box\">\r\n        <h4 className=\"popup__input-name\">Номер телефона</h4>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className=\"popup__input popup__input_type_tel\"\r\n          placeholder=\"Введите номер телефона\"\r\n          pattern='^\\+?([()\\-]*\\d){11}[()\\-]*$'\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <span className=\"popup__error\">{errors.tel}</span>\r\n      <div className=\"popup__input-box\">\r\n        <h4 className=\"popup__input-name\">Язык</h4>\r\n        <select\r\n          name=\"lang\"\r\n          className=\"popup__select popup__select_type_name\"\r\n          placeholder=\"Язык\"\r\n          required\r\n          size=\"0\"\r\n          onChange={handleChange}\r\n        >\r\n          <option disabled selected hidden>\r\n            Язык\r\n          </option>\r\n          <option className=\"popup__option\" value=\"ru\">\r\n            Русский\r\n          </option>\r\n          <option value=\"en\">Английский</option>\r\n          <option value=\"zh\">Китайский</option>\r\n          <option value=\"es\">Испанский</option>\r\n        </select>\r\n      </div>\r\n      <span className=\"popup__error\">{errors.lang}</span>\r\n      <div className=\"popup__checkbox\">\r\n        <input\r\n          className=\"popup__input-checkbox\"\r\n          type=\"checkbox\"\r\n          id=\"conditions\"\r\n          name=\"conditions\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label for=\"conditions\" className=\"popup__checkbox-text\">\r\n          Принимаю <a className=\"popup__checkbox-link\">условия</a> использования\r\n        </label>\r\n      </div>\r\n      <button\r\n        className={\r\n          isValid\r\n            ? \"button button_size_big button_active\"\r\n            : \"button button_size_big button_inactive \"\r\n        }\r\n        disabled={isValid ? false : true}\r\n      >\r\n        Зарегистрироваться\r\n      </button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport RegistrationForm from \"./components/RegistrationForm\";\n\nfunction App() {\n  return <RegistrationForm />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}